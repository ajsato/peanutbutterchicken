//load library for display RGB Backlit (LCD)
#include <Wire.h>
#include "rgb_lcd.h"


#define BUTTON_PIN 2
#define YES_PIN 3
#define NO_PIN 4
#define LED_PIN 5
#define ROT_ANGLE_SENSOR A0
#define FIVE_VCC 5
#define FULL_ROT_ANGLE 300

rgb_lcd lcd;

// pin assignment on base shield
int buttonPin = 2;
int yesPin = 3;
int noPin = 4;
int ledPin = 5;

// current color settings of the LCD
int colorR = 255;
int colorG = 255;
int colorB = 255;

// favorite color setting
int favR = 255;
int favG = 255;
int favB = 255;

// rotary sensor values
int currDegree = 0;
int degree = 0;
int currRotAngle = 0;
float voltage = 0;




char answer = 'w';

void setup() {

  pinMode(buttonPin, INPUT); // set mode for the pin (INPUT/OUTPUT)
  lcd.begin(16, 2);
  pinMode(ROT_ANGLE_SENSOR, INPUT); // controls color 
  lcd.print(""); // print to LCD

}

void loop() {

  //======================================================================
  if (digitalRead(buttonPin)) {
    turnRed();
  }
  else {
    turnWhite();
  }
  lcd.setRGB(colorR, colorG, colorB);
  //======================================================================

  // LCD test for rotary sensor value
  currDegree = getRotDegree();
  lcd.print(currDegree);

  // while waiting for user to push button
  //isYes();
  /**if (answer != ('y' || 'n')) {
    if (answer == 'y') // if yes
      lcd.print("y"); 
    else // if no
      lcd.print("n"); 
  }**/

  

}

//if button is pressed, the screen turns red.
void turnRed()
{
  if (colorG > 0) {
    colorG--;
  }
  if (colorB > 0) {
    colorB--;
  }
  delay(40);
}

//function restore the screen to white light.
void turnWhite()
{
  if (colorG < 255) {
    colorG++;
  }
  if (colorB < 255) {
    colorB++;
  }
  delay(30);
}

void alert()
{
  digitalWrite(ledPin, HIGH);
  delay(50);
  digitalWrite(ledPin, LOW);
}


// choose favorite color




// get the current rotary angle
int getRotDegree() {
  currRotAngle = analogRead(ROT_ANGLE_SENSOR);
  voltage = (float) currRotAngle * FIVE_VCC / 1023;
  degree = (voltage * FULL_ROT_ANGLE)/ FIVE_VCC;

  return degree;
}


void chooseColor() {
  
}


/**char isYes()
{
  while () {
    if (digitalRead(yesPin))
      return 'y';
    if (digitalRead(noPin))
      return 'n';
  }
}**/
